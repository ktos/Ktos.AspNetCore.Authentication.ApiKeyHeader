trigger:
  branches:
    include:
      - refs/tags/v*

pool:
  vmImage: 'Ubuntu 20.04'

variables:
  buildConfiguration: 'Release'

steps:
- task: gitversion/setup@0
  inputs:
    versionSpec: '5.x'
    
- task: gitversion/execute@0

- task: UseDotNet@2  
  inputs:    
    version: '7.x'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: 'src/*.csproj'

- task: DotNetCoreCLI@2  
  inputs:
    command: 'build'
    projects: 'src/*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:Version=$(GitVersion.SemVer) /p:InformationalVersion=$(GitVersion.FullSemVer)'
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: 'test/*.csproj'
    arguments: '--collect:"XPlat Code Coverage"'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
    pathToSources: 'src/'
    #reportDirectory: 'report/'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.SemVer'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'